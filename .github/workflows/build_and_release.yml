name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    strategy:
      matrix:
        go-version: [1.22.x, 1.23.x]
        include:
          - go-version: 1.22.x
            goos: windows
            goarch: amd64
            artifact-name: cdnAnalyzer-windows-amd64.exe
          - go-version: 1.23.x
            goos: linux
            goarch: amd64
            artifact-name: cdnAnalyzer-linux-amd64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Build for ${{ matrix.goos }}-${{ matrix.goarch }}
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        go build -ldflags="-s -w" -o ${{ matrix.artifact-name }} ./cmd/docheck/main.go

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact-name }}
        path: ${{ matrix.artifact-name }}

  release:
    needs: build
    runs-on: windows-latest
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: List downloaded files
      run: |
        echo "Current directory: $(pwd)"
        echo "Artifacts directory contents:"
        Get-ChildItem -Path "./artifacts" -Recurse | Format-Table Name, FullName

    - name: Generate version
      id: version
      run: |
        $timestamp = Get-Date -Format "yyyy.MM.dd-HHmmss"
        echo "version=$timestamp" >> $env:GITHUB_OUTPUT
        echo "Generated version: $timestamp"

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: Release v${{ steps.version.outputs.version }}
        body: |
          ## cdnAnalyzer v${{ steps.version.outputs.version }}
          
          ### 构建信息
          - 构建时间: ${{ steps.version.outputs.version }}
          - 构建平台: Windows & Linux
          - Go版本: 1.22.x & 1.23.x
          
          ### 下载
          - Windows (AMD64): `cdnAnalyzer-windows-amd64.exe`
          - Linux (AMD64): `cdnAnalyzer-linux-amd64`
        files: |
          ./artifacts/cdnAnalyzer-windows-amd64.exe/cdnAnalyzer-windows-amd64.exe
          ./artifacts/cdnAnalyzer-linux-amd64/cdnAnalyzer-linux-amd64
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
